'let' is the new 'var' : 

So what do you think this block of code will print after executed?

var name = "JOSIM";

if(true) { 
  var name = "Sodrul"; 
  console.log(name); 
};

console.log(name);

In general logic, it should've printed "Sodrul" and "JOSIM", right? As, we declared name to be "JOSIM" outside the if block, we'd expect it won't change after whatever we do inside another block, right?

Wrong. This is one of the weired features of JS (after all, the language was written in just 2 weeks, #BRANDENISBOSS)

When executed this code behaves like,

var name = "JOSIM";

if(true) { 
  name = "Sodrul"; 
  console.log(name); 
};

console.log(name);

and prints "Sodrul", "Sodrul" as output.

The 'let' keyword is going to fix this issue.'let' allows you to declare variables limited in scope to the block, statement or expression on which its being used. It's slightly different from the 'var' keyword, which defines variables globally (or locally to an entire function regardless of block scope).

So, this code should behave exactly as you thought,

let name = "JOSIM";

if(true) { 
  let name = "Sodrul"; 
  console.log(name); 
};

console.log(name);

and print "Sodrul", "JOSIM"

https://babeljs.io/repl/#?evaluate=true&presets=es2015%2Creact%2Cstage-2&code=let%20name%20%3D%20%22JOSIM%22%3B%0A%0Aif(true)%20%7B%20%0A%20%20let%20name%20%3D%20%22Sodrul%22%3B%20%0A%20%20console.log(name)%3B%20%0A%7D%3B%0A%0Aconsole.log(name)%3B

One thing to remember though, unlike var, 'let' does not create a property on the global object.

var x = 'Salekin';
let y = 'Salekin';
console.log(this.x); // Salekin
console.log(this.y); // Undefined

https://babeljs.io/repl/#?evaluate=true&presets=es2015%2Creact%2Cstage-2&code=var%20x%20%3D%20'Salekin'%3B%0Alet%20y%20%3D%20'Salekin'%3B%0Aconsole.log(this.x)%3B%20%2F%2F%20Salekin%0Aconsole.log(this.y)%3B%20%2F%2F%20Undefined

Also, redeclaring the same variable within the same function or block scope will raise SyntaxError.

if(true) {
  let x;
  let x; // SyntaxError thrown, Duplicate declaration "x"
}

https://babeljs.io/repl/#?evaluate=true&presets=es2015%2Creact%2Cstage-2&code=if(true)%20%7B%0A%20%20let%20x%3B%0A%20%20let%20x%3B%20%2F%2F%20SyntaxError%20thrown%0A%7D

For indepth discussion read https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let
